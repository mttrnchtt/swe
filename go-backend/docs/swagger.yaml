basePath: /
definitions:
  model.ChatResponse:
    properties:
      buyer_id:
        type: string
      farmer_id:
        type: string
      id:
        type: integer
      last_message:
        type: string
    type: object
  model.CreateChatRequest:
    properties:
      buyer_id:
        description: ID of the buyer initiating the chat
        type: string
      farmer_id:
        description: ID of the farmer
        type: string
    required:
    - buyer_id
    - farmer_id
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  model.MessageResponse:
    properties:
      chat_id:
        type: integer
      content:
        type: string
      id:
        type: integer
      receiver_id:
        type: string
      sender_id:
        type: string
      timestamp:
        description: ISO 8601 format
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/chats:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create chat request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new chat
      tags:
      - Chat
  /api/v1/chats/{buyer_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Farmer ID
        in: query
        name: farmer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.ChatResponse'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all chats for a farmer
      tags:
      - Chat
  /api/v1/chats/{chat_id}/messages:
    get:
      consumes:
      - application/json
      parameters:
      - description: Chat ID
        in: path
        name: chat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.MessageResponse'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all messages for a chat
      tags:
      - Chat
  /api/v1/chats/{farmer_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Farmer ID
        in: query
        name: farmer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.ChatResponse'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all chats for a farmer
      tags:
      - Chat
  /api/v1/chats/ws/{user_id}:
    get:
      description: Establish a WebSocket connection for real-time chat messages between
        users.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols to WebSocket
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Bearer: []
      summary: WebSocket connection for real-time chat
      tags:
      - Chat
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
